---
- name: Include variables based on the operating system
  include_vars: "{{ ansible_facts['os_family'] }}.yml"

- include_tasks: setup-vars.yml

- name: Ensure ClamAV packages are installed
  package:
    name: "{{ item }}"
    state: present
  register: clamav_packages_install
  with_items: "{{ clamav_packages }}"

- name: Ensure rkhunter package is installed
  package:
    name: rkhunter
    state: present
  when: ansible_os_family != 'RedHat'

- name: Run freshclam after ClamAV packages change
  command: freshclam
  when: clamav_packages_install.changed
  register: freshclam_result
  notify: restart clamav
  # On Debian, freshclam is automatically run post-install, so this may fail.
  failed_when:
    - freshclam_result is failed
    - freshclam_result.stderr.find('locked by another process') != -1
  tags: ["skip_ansible_lint"]

- name: Include tasks based on the operating system
  become: true
  block:
    - include_tasks: "install-{{ ansible_facts['os_family'] }}.yml"
  when: ansible_os_family not in ('Windows','Darwin')

- name: Change configuration for the ClamAV daemon
  lineinfile:
    line: "{{ item.line | default('') }}"
    mode: 0644
    path: "{{ clamav_daemon_config_path }}"
    regexp: "{{ item.regexp }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ clamav_daemon_configuration_changes }}"

- name: Ensure ClamAV daemon is running (if configured)
  service:
    enabled: "{{ clamav_daemon_enabled }}"
    name: "{{ clamav_daemon }}"
    state: "{{ clamav_daemon_state }}"

- name: Ensure ClamAV freshclam daemon is running (if configured)
  service:
    enabled: "{{ clamav_freshclam_daemon_enabled }}"
    name: "{{ clamav_freshclam_daemon }}"
    state: "{{ clamav_freshclam_daemon_state }}"

- name: Update rkhunter
  command: rkhunter --update && rkhunter --propupd
  changed_when: false