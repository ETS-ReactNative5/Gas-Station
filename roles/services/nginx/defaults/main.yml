---
error_page_repository: https://github.com/ProfessorManhattan/NGINX-Error-Page.git
#host_id: YourSitesID                       # IMPORTANT: This must be set for this role to work - details are in the README.md
https_repository_prefix: https:// # You can modify this to change the apt-get URLs (for using AptCacherNG)
#nginx_amplify_api_key:                     # Fill this in with your NGINX Amplify API key to enable this service
nginx_clear_sites_available: false # Whether or not to remove all the existing symlinks in sites-available when running this role
nginx_clear_sites_enabled: true # Whether or not to remove all the current configs in sites-enabled when this role runs
nginx_config_repository: https://gitlab.com/megabyte-space/cloud/nginx.git # Repository to use for the base nginx configurations/snippets
nginx_config_repository_version: master # Repository branch to use
nginx_proxy_host: false # Set this to true to create configurations that point to other machines that have already been set up (this is used in scenarios where the router directs all web requests to a specific IP.. you would enable this on the client with that specific IP)
nginx_serve_http: true # Whether or not to listen on port 80 and redirect to 443
nginx_sites_available: [] # List of .conf files for NGINX to have ready
nginx_sites_enabled: [] # List of .conf files for NGINX to serve

# Certbot
#cloudflare_api_token:                      # Add a CloudFlare token with this variable for a wildcard DNS letsencrypt certificate
#cloudflare_email:                          # A certbot requirement
certbot_cloudflare_acme_live: "https://acme-v02.api.letsencrypt.org/directory"
certbot_cloudflare_acme_test: "https://acme-staging-v02.api.letsencrypt.org/directory"
certbot_cloudflare_acme_server: "{{ certbot_cloudflare_acme_live }}"

# Optional Modules
enable_nginx_amplify: true # Whether or not to install the NGINX Amplify agent
enable_nginx_brotli: false # Whether or not to compile and include the Brotli compression engine
enable_nginx_modsecurity_waf: false # Whether or not to compile and include ModSecurity WAF module
enable_nginx_pagespeed: false # TODO: Add Pagespeed module
