---
- name: "Ensure NGINX is installed"
  become_method: runas
  become_user: "{{ ansible_user }}"
  chocolatey.chocolatey.win_chocolatey:
    name: nginx
    state: "{{ app_state | default('present') }}"
    package_params:
      - "/installLocation:{{ nginx_install_path }}"

- name: Ensure error_page_directory is absent
  ansible.windows.win_file:
    path: "{{ error_page_directory }}"
    state: absent

- name: Clone the error page repository
  git:
    depth: "1"
    dest: "{{ error_page_directory }}"
    repo: "{{ error_page_repository }}"
    version: master

- name: Register file information for dhparam.pem
  ansible.windows.win_stat:
    path: "{{ dhparam_path }}"
  register: dhparam_pem

- name: Generate dhparam.pem for improved SSL security (this can take awhile..)
  ansible.windows.win_command: openssl dhparam -out {{ dhparam_path }} {{ dhparam_size | default(omit) }}
  when: not dhparam_pem.stat.exists

- name: Clear sites-available if configured to do so
  ansible.windows.win_file:
    path: "{{ sites_available_path + '*' }}"
    state: absent
  when: nginx_clear_sites_available

- name: Clear sites-enabled if configured to do so
  ansible.windows.win_file:
    path: "{{ sites_enabled_path + '*' }}"
    state: absent
  when: nginx_clear_sites_enabled

- name: Generate sites-available for proxy host
  vars:
    nginx_proxy_host_override: true
  block:
    - name: Register the app ID as a fact
      set_fact:
        app_id: "{{ item.name | default(item) }}"
    - name: "Register template variables for {{ app_id }}"
      set_fact:
        app_fqdn: "{{ item.fqdn | default(hosts[app_id].fqdn | default(hosts[app_id].hosts.split()[-1])) }}"
        authelia_enabled: "{{ item.authelia | default(hosts[app_id].authelia | default(true)) }}"
        authelia_on_localhost: "{{ nginx_hosting_authelia | default(false) }}"
        default_server: "{{ item.default_server | default(hosts[app_id].default_server | default(false)) }}"
        firewall_enabled: "{{ item.firewall | default(hosts[app_id].firewall | default(false)) }}"
        http_hosts: "{{ item.hosts | default(hosts[app_id].hosts) }}"
        intercept_errors: "{{ item.intercept_errors | default(hosts[app_id].intercept_errors | default(true)) }}"
        letsencrypt_domain: "{{ item.letsencrypt_domain | default(hosts[app_id].letsencrypt_domain | default(base_domain)) }}"
        nginx_serve_http: "{{ nginx_serve_http | default(true) }}"
        proxy_certificate: "{{ item.certificate | default(false) }}"
        proxy_certificate_key: "{{ item.certificate_key | default(false) }}"
        proxy_certificate_trusted: "{{ item.certificate_trusted | default(false) }}"
        proxy_file: "{{ hosts[app_id].proxy_file | default('proxy.conf') }}"
        proxy_pass_port: "{{ item.proxy_pass_port | default(hosts[app_id].proxy_pass_port | default(ports[app_id])) }}"
        proxy_pass_url: "{{ item.proxy_pass_url | default(hosts[app_id].proxy_pass_url | default(hosts[app_id].hosts.split()[-1])) }}"
        ssl_trusted_certificate: "{{ item.ssl_trusted_certificate | default(false) }}"
        theme_url: "{{ item.theme_url | default(hosts[app_id].theme_url | default(false)) }}"
        transport: "{{ item.transport | default(hosts[app_id].transport | default('http')) }}"
        waf_rules: "{{ hosts[app_id].custom_waf_rules | default(false) }}"
      when: app_id != host_id
    - name: "Generate NGINX configuration file for {{ app_id }}"
      ansible.windows.win_template:
        src: site-available.conf.j2
        dest: "{{ sites_available_path + '/' + app_id + '.conf' }}"
      when:
        - app_fqdn is defined
        - http_hosts is defined
        - proxy_pass_port is defined
        - proxy_pass_url is defined
        - app_id != host_id
  loop: "{{ hosts | list }}"
  when:
    - nginx_proxy_host
    - not (item in apps)

- name: Symlink sites-enabled
  file:
    src: "{{ sites_available_path }}/{{ item | default(item.name) }}.conf"
    path: "{{ sites_enabled_path }}/{{ item | default(item.name) }}.conf"
    state: link
  loop: "{{ apps }}"
  tags: nginx_configuration
  when: (item | default(item.name)) != host_id
