---
- name: Install Modsecurity dependencies
  apt:
    name: "{{ linux_modsec_dependencies }}"
    state: present

- name: Obtain Modsecurity source code from git repository
  git:
    depth: "1"
    dest: ~/ModSecurity
    force: true
    repo: "{{ modsec_git_repository }}"
    version: "{{ modsec_git_version }}"

- name: Configure, build, make install
  command: |
    ./build.sh
    ./configure
    make
    make install
  args:
    chdir: ~/ModSecurity
    creates: /usr/local/modsecurity/lib/libmodsecurity.so

- name: Obtain Modsecurity-nginx source code
  git:
    depth: "1"
    dest: ~/ModSecurity-nginx
    force: true
    repo: "{{ modsec_nginx_git_repository }}"
    version: "{{ modsec_nginx_git_version }}"

- name: "Download and unarchive NGINX source code of version {{ nginx_version }}"
  unarchive:
    dest: ~/
    remote_src: true
    src: "https://nginx.org/download/nginx-{{ nginx_version }}.tar.gz"

- name: Configure and make ModSecurity NGNINX module
  command: |
    ./configure --with-compat --add-dynamic-module=../ModSecurity-nginx
    make modules
  args:
    chdir: "~/nginx-{{ nginx_version }}"
    creates: ~/mods.so

- name: Copy Modsecurity-nginx module to NGINX modules folder
  copy:
    dest: "{{ nginx_module_path }}/ngx_http_modsecurity_module.so"
    mode: 0644
    remote_src: true
    src: "~/nginx-{{ nginx_version }}/objs/ngx_http_modsecurity_module.so"

- name: Obtain OWASP Modsecurity Rules
  git:
    dest: "{{ modsec_waf_conf_directory }}"
    force: true
    repo: "{{ modsec_rules_git_repository }}"
    version: "{{ modsec_rules_git_version }}"

- name: Copy crs-setup.conf.example to crs-setup.conf
  copy:
    dest: "{{ modsec_waf_conf_directory }}/crs-setup.conf"
    mode: 0600
    remote_src: true
    src: "{{ modsec_waf_conf_directory }}/crs-setup.conf.example"

- name: Clean up source directories
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "~/nginx-{{ nginx_version }}"
    - ~/ModSecurity
    - ~/ModSecurity-nginx
