---
- name: "Ensure {{ app_name }} is installed"
  apt:
    name:
      - cockpit
      - cockpit-machines
      - libvirt-dbus
    state: present

- name: Enable the Cockpit service
  systemd:
    enabled: true
    name: cockpit
    state: started

- name: Gather the package facts
  package_facts:
    manager: auto

- name: Determine whether to install cockpit-docker or cockpit-podman
  set_fact:
    cockpit_package: |
      {% set tmp_cockpit_package = [] %}
      {% if (ansible_facts.packages | regex_search('docker*')) %}
      {% if (ansible_distribution == 'Debian' and ansible_distribution_major_version == '10') %}
      {{ tmp_cockpit_package.append('cockpit-docker') }}
      {% else %}
      {{ tmp_cockpit_package.append('cockpit-podman') }}
      {% endif %}
      {% endif %}
      {% if (ansible_facts.packages | regex_search('podman*')) %}
      {{ tmp_cockpit_package.append('cockpit-podman') }}
      {% endif %}
      {{- tmp_cockpit_package | unique -}}

- name: Add groovy-backports apt repository
  apt_repository:
    filename: groovy-backports
    repo: "{{ groovy_backports_url }}"
    state: present
    update_cache: true
  when:
    - ansible_distribution == 'Ubuntu'
    - ansbile_distribution_release == 'focal'

- name: Install Cockpit Docker or Cockpit Podman
  apt:
    name: "{{ cockpit_package }}"
    state: present
  when: cockpit_package is defined

- name: Install Cockpit 389 DS
  apt:
    name:
      - 389-ds
      - cockpit-389-ds
    state: present
  when: cockpit_install_389_ds

- name: Add Cockpit machine profiles
  template:
    src: cockpit-machine.json.j2
    dest: "{{ cockpit_machines_path }}/{{ item.name }}.json"
    owner: root
    mode: 0644
  loop: "{{ cockpit_instances }}"
  when: cockpit_instances is defined

- name: Add libvirt user to libvirtdbus group
  user:
    append: true
    comment: Required by Cockpit
    create_home: false
    groups:
      - libvirtdbus
    name: libvirt
    state: present
    system: true
