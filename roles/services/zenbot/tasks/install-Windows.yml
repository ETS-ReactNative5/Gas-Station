---
- name: Ensure Megabyte Labs configuration directory exists
  ansible.windows.win_file:
    path: "{{ item }}"
    state: directory
  loop:
    - '%USERPROFILE%\.config'
    - '%USERPROFILE%\.config\megabytelabs'

- name: "Check if {{ app_name }} has configuration stored in '%USERPROFILE%/.config/megabytelabs/zenbot'"
  ansible.windows.win_stat:
    path: '%USERPROFILE%\.config\megabytelabs\zenbot'
  register: zenbot_config

- name: "Detect previously installed {{ app_name }} version"
  ansible.windows.win_command: type zenbot
  args:
    chdir: '%USERPROFILE%\.config\megabytelabs'
  changed_when: false
  register: current_zenbot_version
  when: zenbot_config.stat.exists

- name: "Detect the latest {{ app_name }} version"
  ansible.windows.win_uri:
    url: https://api.github.com/repos/DeviaVir/zenbot/releases/latest
  register: zenbot_latest_release_tag

- name: "Determine whether or not the latest version of {{ app_name }} is already installed"
  set_fact:
    install_zenbot: "{{ (current_zenbot_version.skipped) or \
      ((not current_zenbot_version.skipped) and (current_zenbot_version.stdout != zenbot_latest_release_tag.json.tag_name | replace('v',''))) }}"

- name: "Ensure older version of {{ app_name }} is uninstalled"
  ansible.windows.win_file:
    path: '%PROGRAMFILES%\zenbot\zenbot.bat'
    state: absent
  when: install_zenbot

- name: "Ensure {{ app_name }}'s source is downloaded"
  ansible.windows.win_get_url:
    url: https://github.com/deviavir/zenbot/archive/master.zip
    dest: "{{ zenbot_src_dir }}\\zenbot.zip"
  when: install_zenbot

- name: "Ensure {{ app_name }}'s source is updated"
  community.windows.win_unzip:
    src: "{{ zenbot_src_dir }}\\zenbot.zip"
    dest: "{{ zenbot_src_dir }}"
  when: install_zenbot

- name: "Ensure {{ app_name }} is installed"
  ansible.windows.win_shell: |
    npm install
  args:
    creates: '%PROGRAMFILES%\zenbot\zenbot.bat'
    chdir: "{{ zenbot_src_dir }}"
  when: install_zenbot

- name: "Add {{ app_name }} to PATH"
  ansible.windows.win_path:
    elements: "{{ zenbot_src_dir }}"
    state: present

- name: "Save meta information about the version of {{ app_name }} that was installed"
  ansible.windows.win_copy:
    dest: '%USERPROFILE%\.config\megabytelabs\zenbot'
    content: |
      {{ zenbot_latest_release_tag.json.tag_name | replace('v','') }}
  when: install_zenbot
