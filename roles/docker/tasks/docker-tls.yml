---
- name: Ensure .docker user folder exists
  file:
    path: ~/.docker
    state: directory

- name: Create a Docker password file for the TLS certificates
  copy:
    content: "{{ lookup('password', '/dev/null length=50 chars=ascii_letters') }}"
    dest: ~/.docker/.pw
    force: no
    mode: "400"

- name: Generate Docker certificates
  shell: |
    export HOST={{ docker_tls_fqdn }}
    mkdir -pv ~/.docker
    cd ~/.docker
    openssl genrsa -aes256 -passout file:~/.docker/.pw -out docker-ca-key.pem 4096
    openssl req -new -passin file:~/.docker/.pw -subj '/C={{ docker_tls_country }}/ST={{ docker_tls_state }}/L={{ docker_tls_locality }}/O={{ docker_tls_organization }}/OU={{ docker_tls_division }}/CN=$HOST' -x509 -days 365 -key docker-ca-key.pem -sha256 -out ca.pem
    openssl genrsa -out docker-server-key.pem 4096
    openssl req -subj "/CN=$HOST" -sha256 -new -key docker-server-key.pem -out docker-server.csr
    echo subjectAltName = DNS:$HOST,IP:{{ host_ip_address }},IP:127.0.0.1 >> extfile.cnf
    echo extendedKeyUsage = serverAuth >> extfile.cnf
    openssl x509 -req -days 365 -sha256 -in docker-server.csr -CA ca.pem -CAkey docker-ca-key.pem -passin file:~/.docker/.pw -CAcreateserial -out docker-server-cert.pem -extfile extfile.cnf
    openssl genrsa -out key.pem 4096
    openssl req -subj '/CN=client' -new -key key.pem -out docker-client.csr
    echo extendedKeyUsage = clientAuth > extfile-client.cnf
    openssl x509 -req -days 365 -sha256 -in docker-client.csr -CA ca.pem -CAkey docker-ca-key.pem -passin file:~/.docker/.pw -CAcreateserial -out cert.pem -extfile extfile-client.cnf
    rm -v docker-client.csr docker-server.csr extfile.cnf extfile-client.cnf

- name: Move Docker server certificates to protected SSL folder
  become: yes
  copy:
    src: "~/.docker/{{ item.src | default(item) }}"
    dest: "/etc/ssl/private/{{ item.dest | default(item) }}"
    owner: root
    group: root
    mode: "400"
    remote_src: yes
  with_items:
    - docker-server-cert.pem
    - docker-server-key.pem
    - docker-ca-key.pem
    - src: ca.pem
      dest: docker-ca.pem

- name: Remove server keys from ~/.docker
  file:
    path: "~/.docker/{{ item }}"
    state: absent
  with_items:
    - docker-server-cert.pem
    - docker-server-key.pem
    - docker-ca-key.pem

- name: Copy certificates to the ~/.docker folder on the machine running Ansible
  fetch:
    src: "~/.docker/{{ item }}"
    dest: "~/.docker/{{ ansible_host }}-{{ item }}"
    mode: "400"
    flat: yes
  with_items:
    - ca.pem
    - cert.pem
    - key.pem
  when:
    - ansible_host != 'local'

- name: Allow TCP connections to Docker
  become: yes
  lineinfile:
    path: /etc/systemd/system/multi-user.target.wants/docker.service
    regex: "ExecStart="
    line: ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --tlsverify --tlscacert=/etc/ssl/private/docker-ca.pem --tlscert=/etc/ssl/private/docker-server-cert.pem --tlskey=/etc/ssl/private/docker-server-key.pem -H=0.0.0.0:2424