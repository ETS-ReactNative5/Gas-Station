---
- name: Ensure custom facts directory exists
  file:
    mode: 0755
    path: {{ fact_path }}
    state: directory

- name: "Ensure {{ snitch_src_dir }} directory exists"
  file:
    path: "{{ snitch_src_dir }}"
    state: directory
    mode: 0755

- name: "Detect the latest {{ app_name }} version"
  uri:
    url: https://api.github.com/repos/evilsocket/opensnitch/releases/latest
  register: snitch_latest_release_tag

- name: "Determine whether or not the latest version of {{ app_name }}'s AppImage is already installed"
  set_fact:
    install_snitch: "{{ (ansible_local.snitch is not defined) or \
      ((ansible_local.snitch is defined) and \
      (ansible_local['snitch']['settings']['version'] != snitch_latest_release_tag.json.tag_name | replace('v',''))) }}"

- name: "Acquire {{ app_name }}'s installers"
  get_url:
    url: "https://github.com/evilsocket/opensnitch/releases/download/{{ snitch_latest_release_tag.json.tag_name }}/{{ item }}"
    dest: "{{ snitch_src_dir }}/{{ item }}"
  when: install_snitch
  loop:
    - "opensnitch_{{ snitch_latest_release_tag.json.tag_name | replace('v','') }}-1_amd64.deb"
    - "python3-opensnitch-ui_{{ snitch_latest_release_tag.json.tag_name | replace('v','') }}-1_all.deb"

- name: "Ensure {{ app_name }} is installed"
  apt:
    name: "{{ snitch_src_dir }}/{{ item }}"
    state: present
  when: install_snitch
  loop:
    - "opensnitch_{{ snitch_latest_release_tag.json.tag_name | replace('v','') }}-1_amd64.deb"
    - "python3-opensnitch-ui_{{ snitch_latest_release_tag.json.tag_name | replace('v','') }}-1_all.deb"

- name: "Save meta information about the version of {{ app_name }} that was installed"
  community.general.ini_file:
    path: {{ fact_path }}/snitch.fact
    mode: 0644
    section: settings
    option: version
    value: "{{ snitch_latest_release_tag.json.tag_name | replace('v','') }}"
    backup: true
    no_extra_spaces: true
  when: install_snitch
