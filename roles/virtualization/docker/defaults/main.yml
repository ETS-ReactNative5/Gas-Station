---
# @var docker_edition: ce
# Edition can be either `ce` (Community Edition) or `ee` (Enterprise Edition).
docker_edition: "ce"
# @example #
# docker_edition:
#  - subitem: string
#  - subitem2: string
# @end

# @var docker_package: docker-{{ docker_edition }}
# The name of the Docker package to install
docker_package: "docker-{{ docker_edition }}"

# @var docker_restart_handler_state: restarted
# The state that the Docker service should assume when a restart event is triggered
docker_restart_handler_state: restarted

# @var docker_install_compose: true
# Whether or not to install docker-compose
docker_install_compose: true
# @var docker_compose_version: "1.26.0"
# The version of docker-compose that should be installed
docker_compose_version: "1.26.0"
# @var docker_compose_path: /usr/local/bin/docker-compose
# The target destination of the docker-compose binary that will be installed
docker_compose_path: /usr/local/bin/docker-compose

# @var docker_apt_release_channel: stable
# The release channel to use on Debian/Ubuntu. You can set the value of this variable to either 'stable' or 'edge'.
docker_apt_release_channel: stable
# @var docker_apt_arch: amd64
# The processor architecture to use
docker_apt_arch: amd64

# @var https_repository_prefix: https://
# Allows you to customize what the apt repository URL starts with. This is useful if you are using something like
# apt-cacher-ng as a proxy cache.
https_repository_prefix: https://
# @var docker_apt_repository: *See defaults/main.yml*
# The apt repository to use
docker_apt_repository: "deb [arch={{ docker_apt_arch }}] {{ https_repository_prefix }}\
  download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} \
  {{ docker_apt_release_channel }}"
docker_apt_ignore_key_error: true
docker_apt_gpg_key: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"

# Used only for RedHat/CentOS/Fedora.
docker_yum_repo_url: "https://download.docker.com/linux/{{ (ansible_distribution == 'Fedora') \
  | ternary('fedora','centos') }}/docker-{{ docker_edition }}.repo"
docker_yum_repo_enable_edge: "0"
docker_yum_repo_enable_test: "0"
docker_yum_gpg_key: https://download.docker.com/linux/centos/gpg

# A list of users who will be added to the docker group.
docker_users: []

# Whether or not to use snap to install Docker - use this if there are issues with your configuration
# Certificates will not be generated for a snap install - see the comment for the docker_tls variable
docker_snap_install: false

# When set it true, the role will configure Docker for TLS network connections and generate the required certificates
# The certificates will be stored in /etc/ssl/docker on the client, and in the ~/.docker folder on the host
docker_tls: true
docker_tls_country: US # These variables are used when generating the self-signed certificates
docker_tls_state: New Jersey
docker_tls_locality: The Hood
docker_tls_organization: Megabyte LLC
docker_tls_division: Megabyte Labs
docker_tls_fqdn: machine.example.com # Replace this with the FQDN of your Docker host
