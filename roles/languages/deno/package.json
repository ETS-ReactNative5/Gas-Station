{
  "author": "Brian Zalewski <brian@megabyte.space> (https://megabyte.space)",
  "blueprint": {
    "description": "Installs Deno (an alternative to Node.js that supports TypeScript and is built with security in mind) on nearly any platform",
    "group": "ansible",
    "name": "Deno",
    "overview": "[Deno](https://deno.land/) is a modern runtime for JavaScript and TypeScript. It is advertised as a simple runtime that uses V8 and Rust. It is boasted as secure-by-default because there is no file, network, or environment access unless explicitly enabled. Deno compiles apps into single executables. An app made with Deno generally specifies its dependencies as URLs mainly hosted in the [Deno standard module repository](https://deno.land/std).",
    "repository": {
      "github": "https://github.com/ProfessorManhattan/ansible-deno",
      "gitlab": "https://gitlab.com/megabyte-labs/ansible-roles/deno"
    },
    "slug": "deno",
    "subgroup": "role",
    "title": "Deno Ansible Role"
  },
  "bugs": {
    "email": "help@megabyte.space",
    "url": "https://gitlab.com/megabyte-labs/ansible-roles/deno/-/issues"
  },
  "changelog": {
    "displayTypes": [
      "feat",
      "fix",
      "perf",
      "refactor",
      "revert"
    ],
    "showAuthor": true
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "helpUrl": "https://megabyte.space/docs/contributing/commits"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/git-cz-emoji"
    }
  },
  "dependencies": {},
  "description": "Installs Deno (an alternative to Node.js that supports TypeScript and is built with security in mind) on nearly any platform",
  "devDependencies": {
    "@commitlint/config-conventional": "^16.0.0",
    "@washingtondc/development": "latest",
    "cz-emoji-conventional": "^1.0.1",
    "eslint-config-strict-mode": "latest",
    "git-cz-emoji": "latest",
    "glob": "^7.2.0",
    "handlebars-helpers": "^0.10.0",
    "prettier-config-sexy-mode": "latest",
    "semantic-release-config": "latest",
    "typescript": "^4.5.5"
  },
  "engines": {
    "node": ">=14.18.0"
  },
  "eslintConfig": {
    "extends": "eslint-config-strict-mode"
  },
  "funding": [
    {
      "type": "opencollective",
      "url": "https://opencollective.com/megabytelabs"
    },
    {
      "type": "patreon",
      "url": "https://www.patreon.com/ProfessorManhattan"
    }
  ],
  "homepage": "https://megabyte.space",
  "keywords": [
    "ansible",
    "ansible-role",
    "archlinux",
    "centos",
    "debian",
    "doctor",
    "fedora",
    "install",
    "installdoc",
    "installdoctor",
    "macos",
    "mblabs",
    "megabytelabs",
    "molecule",
    "professormanhattan",
    "role",
    "ubuntu",
    "washingtondc",
    "windows"
  ],
  "license": "MIT",
  "lint-staged": {
    "(Brewfile|composer.lock|Gemfile|Gopkg.lock|Pipfile.lock)": [
      "task fix:prettier --"
    ],
    "**/!(logo).(jpg|png)": [
      "task image:compress --"
    ],
    "**/*": [
      "task lint:any --"
    ],
    "**/*.(bash|cfg|cgi|command|css|env|env.*|handlebars|hbs|html|less|fcgi|java|md|mdx|mjml|php|phtml|properties|reg|scss|tmpl|tmux|tool|tpl|zsh)": [
      "task fix:prettier --"
    ],
    "**/*.(cjs|js|jsx|mjs|ts|tsx)": [
      "task fix:js --",
      "task lint:js --"
    ],
    "**/*.(json|webapp|webmanifest)": [
      "task fix:json --"
    ],
    "**/*.(yml|yaml)": [
      "task fix:yaml --",
      "task lint:yaml --"
    ],
    "**/*.go": [
      "task fix:go --",
      "task lint:go --"
    ],
    "**/*.php": [
      "task fix:php --",
      "task lint:php --"
    ],
    "**/*.py": [
      "task fix:python --",
      "task lint:python --"
    ],
    "**/*.sh": [
      "task fix:prettier --",
      "task fix:shell --",
      "task lint:shell --"
    ],
    "**/*.toml": [
      "task fix:toml --",
      "task fix:prettier --",
      "task lint:toml --"
    ],
    "**/*.xml": [
      "task fix:xml --",
      "task lint:xml --"
    ],
    "**/*vault.yml": [
      "task ansible:vault:lint:file --"
    ],
    "Dockerfile": [
      "task fix:prettier --",
      "task lint:docker --"
    ],
    "Vagrantfile": [
      "task fix:prettier --",
      "task lint:vagrant"
    ],
    "logo.png": [
      "task image:resize -- 200 200",
      "task image:compress --"
    ]
  },
  "name": "@installdoc/ansible-deno",
  "ntl": {
    "descriptions": {
      "build": "Builds the project using the build command specified under scripts in package.json",
      "help": "Display the Bodega Taskfile.yml interactive help menu",
      "prepare": "A hook triggered by running npm install that runs logic such as installing pre-commit hooks",
      "repair": "Fixes basic issues in projects that are having trouble running basic commands like 'task start'",
      "start": "Entrypoint for new developers that installs requirements and then runs 'task start'",
      "test": "Runs the appropriate test logic by running the test command defined under scripts in package.json"
    }
  },
  "optionalDependencies": {},
  "pnpm": {
    "allowedVersions": {
      "@typescript-eslint/eslint-plugin": "5",
      "typescript": "4"
    },
    "neverBuiltDependencies": [
      "core-js",
      "core-js-pure",
      "highlight.js"
    ],
    "peerDependencyRules": {
      "ignoreMissing": [
        "eslint",
        "prettier"
      ]
    }
  },
  "prettier": "prettier-config-sexy-mode",
  "private": false,
  "publishConfig": {
    "@megabyte:registry": "https://gitlab.com/api/v4/projects//packages/npm/",
    "access": "public"
  },
  "release": {
    "branches": [
      "main",
      "master",
      "next",
      {
        "name": "beta",
        "prerelease": true
      },
      {
        "name": "alpha",
        "prerelease": true
      }
    ],
    "extends": "semantic-release-config"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ProfessorManhattan/ansible-deno.git"
  },
  "scripts": {
    "build": "task ansible:build:none",
    "help": "task --menu",
    "prepare": "npm run start && (test -f Taskfile.yml && task common:husky) || true",
    "repair": "bash <(curl -sS https://install.doctor/repair)",
    "start": "bash start.sh",
    "test": "[ -z \"$PS1\" ] && task ansible:test:prompt || task ansible:test:default"
  },
  "type": "module",
  "version": "0.0.1"
}
