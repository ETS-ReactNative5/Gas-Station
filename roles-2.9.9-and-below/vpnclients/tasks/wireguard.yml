---
- name: Check if WireGuard NetworkManager VPN plugin exists
  stat:
    path: /usr/lib/NetworkManager/nm-wireguard-service
  register: nm_wireguard

- name: Install Wireguard NetworkManager VPN plugin dependencies
  apt:
    name:
      - build-essential
      - dh-autoreconf
      - intltool
      - libglib2.0-dev
      - libgtk-3-dev
      - libnma-dev
      - libsecret-1-dev
      - network-manager-dev
      - resolvconf
      - wireguard
  when: not nm_wireguard.stat.exists

- name: Clone the Wireguard NetworkManager VPN plugin git
  git:
    repo: https://github.com/max-moser/network-manager-wireguard.git
    dest: /tmp/wireguard-install
    depth: "1"
  when: not nm_wireguard.stat.exists

- name: Run ./autogen.sh
  command: ./autogen.sh --without-libnm-glib
  args:
    chdir: /tmp/wireguard-install
  when: not nm_wireguard.stat.exists

- name: Run ./configure
  command: ./configure --without-libnm-glib --prefix=/usr --sysconfdir=/etc --libdir=/usr/lib/x86_64-linux-gnu --libexecdir=/usr/lib/NetworkManager --localstatedir=/var
  args:
    chdir: /tmp/wireguard-install
  when: not nm_wireguard.stat.exists

- name: Run make
  command: make
  args:
    chdir: /tmp/wireguard-install
  when: not nm_wireguard.stat.exists

- name: Run make install
  command: make install
  args:
    chdir: /tmp/wireguard-install
  when: not nm_wireguard.stat.exists

- name: Copy over WireGuard configuration files
  copy:
    src: "wireguard/{{ item }}.nmconnection"
    dest: "/etc/NetworkManager/system-connections/{{ item }}.nmconnection"
    owner: root
    group: root
    mode: "0600"
  with_items: "{{ wireguard_nmconnections | default([]) }}"

- name: Wait before restarting NetworkManager
  wait_for:
    timeout: 2
  delegate_to: localhost

- name: Restart NetworkManager
  service:
    name: NetworkManager
    state: restarted