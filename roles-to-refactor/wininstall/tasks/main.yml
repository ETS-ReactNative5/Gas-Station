---

- name: "Install Vagrant via Chocolatey"
  chocolatey.chocolatey.win_chocolatey:
    name: vagrant
    state: latest

- name: Check if Vagrant installation is in default location
  ansible.windows.win_stat:
    path: C:\HashiCorp\Vagrant
  register: hashicorp_default_location

- name: Move the Vagrant installation to Program Files
  ansible.windows.win_shell: Move-Item C:\HashiCorp\Vagrant "C:\Program Files\Vagrant"
  when:
    - hashicorp_default_location.stat.exists is defined
    - hashicorp_default_location.stat.exists

- name: Delete original Vagrant directory
  ansible.windows.win_file:
    path: C:\HashiCorp
    state: absent

- name: Remove original Vagrant PATH
  ansible.windows.win_path:
    elements: C:\HashiCorp\Vagrant\bin
    state: absent

- name: Add new Vagrant PATH
  ansible.windows.win_path:
    elements: C:\Program Files\Vagrant\bin
    state: present

- name: Remove unnecessary APPX packages
  ansible.windows.win_shell: |
    Get-AppxPackage -AllUsers -Name "{{ item | default(item) }}" | Remove-AppxPackage -AllUsers -ErrorAction SilentlyContinue;
    Get-AppxProvisionedPackage -Online | where {$_.PackageName -like "{{ item | default(item) }}"} | Remove-AppxProvisionedPackage -AllUsers -Online -ErrorAction SilentlyContinue;
  with_items: "{{ appx_removals | default([]) }}"

- name: Install global NPM packages
  ansible.windows.win_shell: "npm install -g {{ item }}@latest"
  with_items: "{{ npm_globals | default([]) }}"

- name: Install Starship via Scoop
  block:

    - name: Install Scoop
      ansible.windows.win_shell: Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')

    - name: Update Scoop
      ansible.windows.win_shell: scoop update

    - name: Install Scoops
      ansible.windows.win_shell: "scoop install {{ item }}"
      with_items: "{{ scoop_packages | default([]) }}"

  rescue:
    - name: Remove scoop folder from user directory
      ansible.windows.win_file:
        path: "%USERPROFILE%\\scoop"
        state: absent

- name: Remove "source" directory from user folder
  ansible.windows.win_file:
    path: "%USERPROFILE%\\source"
    state: absent

- name: "Check if Logitech has a start menu shortcut in a folder in the Windows shared start menu location"
  ansible.windows.win_stat:
    path: "{{ windows_startmenu }}\\Logitech\\Logitech Options.lnk"
  register: startmenu_shortcut

- name: Check if Logitech start menu entry was already moved
  ansible.windows.win_stat:
    path: "{{ windows_startmenu}}\\Logitech Options.lnk"
  register: logitech_startmenu_lnk

- name: "Move the Logitech Options shortcut to the parent directory if it resides in a folder"
  ansible.windows.win_shell: |
    "mv '{{ windows_startmenu }}\\Logitech\\Logitech Options.lnk' '{{ windows_startmenu }}\\Logitech Options.lnk'"
  when:
    - startmenu_shortcut.stat.exists
    - not logitech_startmenu_lnk.stat.exists

- name: "Remove the Logitech folder from the start menu if it exists"
  ansible.windows.win_file:
    path: "{{ windows_startmenu }}\\Logitech"
    state: absent

- name: "Remove the Visual Studio Installer link if it is present"
  ansible.windows.win_file:
    path: "{{ windows_startmenu }}\\Visual Studio Installer.lnk"
    state: absent

- name: "Remove Malwarebytes root directory folder if it is present"
  ansible.windows.win_file:
    path: C:\Malwarebytes
    state: absent

- name: Remove OneDriveTemp
  ansible.windows.win_file:
    path: C:\OneDriveTemp
    state: absent

- name: Hide files in user directory
  ansible.windows.win_shell: attrib +h $env:USERPROFILE\\{{ item }}
  loop: "{{ win_dotfiles }}"

- name: Remove .idlerc
  ansible.windows.win_file:
    path: "%USERPROFILE%\\.idlerc"
    state: absent

- name: Copy bandizip.reg file
  ansible.windows.win_copy:
    src: bandizip.reg
    dest: "%USERPROFILE%\\bandizip.reg"

- name: Merge Bandizip registry settings
  community.windows.win_regmerge:
    path: "%USERPROFILE%\\bandizip.reg"

- name: Remove Bandizip .reg file
  ansible.windows.win_file:
    path: "%USERPROFILE%\\bandizip.reg"
    state: absent
