---
- name: Ensure git repository folder exists
  become: yes
  file:
    path: "{{ item.folder }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "755"
- name: Check if git already exists
  stat:
    path: "{{ item.folder }}/.git"
  register: git_folder
- name: Clone the repository
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.folder }}"
    depth: "1"
  when: not git_folder.stat.exists
- name: Restore containers if necessary
  become: yes
  become_user: "{{ item.user | default(ansible_user) }}"
  command: docker-compose-backup restore
  args:
    chdir: "{{ item.folder }}"
  when: not git_folder.stat.exists
- name: Backup containers if necessary
  become: yes
  become_user: "{{ ansible_user }}"
  command: docker-compose-backup backup
  args:
    chdir: "{{ item.folder }}"
  when: git_folder.stat.exists
- name: Create backup cron job
  become: yes
  cron:
    name: "{{ item.name }} Backup Cron Job"
    minute: "45"
    hour: "3"
    user: "{{ item.user | default(ansible_user) }}"
    job: 'curl -fsS -m 10 --retry 5 -o /dev/null https://{{ healthcheck_endpoint }}/ping/{{ item.healthcheck_id }}/start && cd {{ item.folder }} && m=$(docker-compose-backup backup 2>&1) && curl -fsS -m 10 --retry 5 --data-raw "$m" "https://{{ healthcheck_endpoint }}/ping/{{ item.healthcheck_id }}$([ $? -ne 0 ] && echo -n /fail)"'
    cron_file: "{{ item.name | lower }}-backup"