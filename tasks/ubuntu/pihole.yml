---
- name: Create PiHole directory
  file:
    path: /etc/pihole
    state: directory
- name: Copy PiHole configuration
  copy:
    src: files/ubuntu/pihole-setupVars.conf
    dest: /etc/pihole/setupVars.conf
  register: pihole_config
- name: Register pihole_binary if pihole is present
  stat:
    path: /usr/local/bin/pihole
  register: pihole_binary
- name: Set pihole_installed fact
  set_fact:
    pihole_installed: "{{ pihole_binary.stat.exists | default(false) }}"
- name: Download installation script
  get_url:
    url: https://raw.githubusercontent.com/pi-hole/pi-hole/master/automated%20install/basic-install.sh
    dest: ~/pihole-install.sh
    mode: u+rwx
  when: not pihole_installed
- name: Run the installation script
  shell: ~/pihole-install.sh --unattended
  when: not pihole_installed
- name: Copy dnsmasq configuration
  copy:
    src: files/ubuntu/pihole-dnsmasq-cloudflared.conf
    dest: /etc/dnsmasq.d/50-cloudflared.conf
  register: dnsmasq_config
- name: Check if dnsmasq should be restarted
  set_fact:
    restart_dnsmasq: "{{ true if (pihole_config is changed or dnsmasq_config is changed) else false }}"
- name: Restart dnsmasq if required
  service:
    name: dnsmasq
    enabled: true
    state: restarted
  when: restart_dnsmasq
