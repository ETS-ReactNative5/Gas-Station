authorized_key_file: id_rsa_local.pub     # Since this is defined here, this .pub file is added to the authorized_keys SSH configuration by default on all machines

base_domain: megabyte.space               # This is the domain that will be used for all services (e.g. if you access sonarr.home/, you will be redirected to https://sonarr.home.megabyte.space)
home_subdomain: home                      # This is the subdomain used for services that are intended to be used by other people on your intranet
lab_subdomain: lab                        # This is the subdomain used for services that are intended to be used by you (the tech guru)

docker_compose_binary: /snap/bin/docker-compose

dotfiles_repo: https://gitlab.com/ProfessorManhattan/dotfiles.git # This is the repository that contains dotfiles that are deployed to your desktop workstations (i.e. Ubuntu Desktop or Windows 10)

etc_hosts:
  authelia:
    authelia: false
    fqdn_override: "auth.{{ base_domain }}"
    hosts: "auth authelia auth.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26690
    regexp: "# Authelia"
    subdomain: "auth"
    ip_address: 10.14.24.14
    default_server: true
  awx:
    hosts: "awx awx.{{ lab_subdomain }} awx.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    regexp: "# AWX"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.14.69
  bazarr:
    hosts: "bazarr bazarr.{{ home_subdomain }} bazarr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_forward: "bazarr"
    proxy_pass_port: 26671
    regexp: "# Bazarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  cockpit:
    hosts: "cockpit cockpit.{{ lab_subdomain }} cockpit.{{ lab_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 9090
    proxy_https: yes
    letsencrypt_domain: megabyte.space
    regexp: "# Cockpit"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.24.14
    transport: 'https'
  cups:
    hosts: "cups cups.{{ home_subdomain }} printers printers.{{ home_subdomain }} printers.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 631
    regexp: "# CUPS"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
    transport: 'https'
  elastic:
    hosts: "elastic elastic.{{ lab_subdomain }} elastic.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 27141
    regexp: "# ElasticSearch"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.24.14
    transport: 'https'
  heimdall:
    fqdn_override: "my.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26672
    hosts: "heimdall heimdall.{{ home_subdomain }} my.{{ home_subdomain }} my.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# Heimdall"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
    default_server: true
  instapy:
    hostname: "InstaPy"
    hosts: "instapy instapy.{{ home_subdomain }} instapy.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# InstaPy"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.30.69
  jackett:
    hosts: "jackett jackett.{{ home_subdomain }} jackett.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26673
    regexp: "# Jackett"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  kibana:
    hosts: "kibana kibana.{{ lab_subdomain }} kibana.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 27140
    regexp: "# Kibana"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.24.14
    transport: 'https'
  kodi:
    hosts: "kodi kodi.{{ home_subdomain }} kodi.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26674
    regexp: "# Kodi"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  lidarr:
    hosts: "lidarr lidarr.{{ home_subdomain }} lidarr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26676
    regexp: "# Lidarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  maas:
    hosts: "maas maas.{{ lab_subdomain }} maas.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 5240
    regexp: "# MAAS"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.24.14
    firewall: yes # Enable NGINX ModSecurity
    transport: 'https'
  musicbrainz:
    hosts: "musicbrainz musicbrainz.{{ home_subdomain }} musicbrainz.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26677
    regexp: "# MusicBrainz"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  netboot:
    hosts: "netboot netboot.{{ home_subdomain }} netboot.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26687
    regexp: "# NetbootXYZ"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.49.14
  netbootassets:
    hosts: "netbootassets netbootassets.{{ home_subdomain }} netbootassets.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26688
    regexp: "# Assets4XYZ"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.49.14
  nuc:
    hosts: "nuc"
    hostname: "NUC"
    regexp: "# NUC"
    ip_address: 10.14.24.14
  nzbget:
    hosts: "nzbget nzbget.{{ home_subdomain }} nzbget.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26678
    regexp: "# NZBGet"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  ombi:
    hosts: "ombi ombi.{{ home_subdomain }} ombi.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26679
    regexp: "# Ombi"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  organizr:
    hosts: "organizr organizr.{{ home_subdomain }} organizr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26680
    regexp: "# Organizr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  pfsense:
    hosts: "pfsense pfsense.{{ lab_subdomain }}"
    regexp: "# pfSense"
    ip_address: 10.0.0.1
  pihole:
    hostname: "PiHole"
    hosts: "pihole pi.hole dns.{{ home_subdomain }} pihole.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# PiHole"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.35.24
    transport: 'https'
  plex:
    hosts: "plex plex.{{ home_subdomain }} plex.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    ip_address: 10.14.14.14
    proxy_pass_port: 32400
    regexp: "# Plex"
    subdomain: "{{ home_subdomain }}"
    transport: 'https'
  portainer:
    hosts: "portainer portainer.{{ lab_subdomain }} portainer.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26685
    regexp: "# Portainer"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.24.14 # No HTTPS support out of box
  radarr:
    hosts: "radarr radarr.{{ home_subdomain }} radarr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26681
    regexp: "# Radarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  raspi:
    hostname: "Raspi"
    hosts: "raspi"
    regexp: "# RaspiHelper"
    ip_address: 10.14.49.14
  seconion:
    hosts: "seconion seconion.{{ lab_subdomain }} seconion.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# Security Onion"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.44.14
  sonarr:
    hosts: "sonarr sonarr.{{ home_subdomain }} sonarr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26682
    regexp: "# Sonarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  tautulli:
    hosts: "tautulli tautulli.{{ home_subdomain }} tautulli.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26683
    regexp: "# Tautulli"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  transmission:
    hosts: "transmission transmission.{{ home_subdomain }} transmission.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26684
    regexp: "# Transmission"
    subdomain: "{{ home_subdomain }}"
    ip_address: 10.14.14.14
  unifihome:
    fqdn_override: "unifi.{{ home_subdomain }}.{{ base_domain }}"
    hosts: "unifihome unifi.{{ home_subdomain }} unifi.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# UniFi Home"
    proxy_pass_port: 443
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.1.1
    transport: 'https'
    letsencrypt_domain: megabyte.space
  unifilab:
    fqdn_override: "unifi.{{ lab_subdomain }}.{{ base_domain }}"
    hosts: "unifilab unifi.{{ lab_subdomain }} unifi.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# UniFi Lab"
    proxy_pass_port: 8443
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.49.14
    transport: 'https'
    letsencrypt_domain: megabyte.space
  workstation:
    hostname: "Workstation"
    hosts: "workstation"
    regexp: "# Workstation"
    ip_address: 10.14.14.14

etc_hosts_list:
  - authelia
  - awx
  - bazarr
  - cockpit
  - cups
  - elastic
  - heimdall
  - instapy
  - jackett
  - kibana
  - kodi
  - lidarr
  - nzbget
  - maas
  - musicbrainz
  - netboot
  - netbootassets
  - nuc
  - ombi
  - organizr
  - pfsense
  - pihole
  - plex
  - portainer
  - radarr
  - raspi
  - seconion
  - sonarr
  - tautulli
  - transmission
  - unifihome
  - unifilab
  - workstation

netdata_rooms:
  general: fb8e46ae-4354-454a-b676-46cda89c2e9b
  james: 495e99ef-60b4-43a4-bb60-4e05accf58a2

netdata_room: "{{ netdata_rooms.general }}"

nodejs_version: "12.x"

playbooks_source_repository: git@gitlab.com:ProfessorManhattan/Playbooks.git # This will update the source git repository to use SSH, if cloned from HTTPS

rc1918_networks:
  - 10.0.0.0/8
  - 172.16.0.0/12
  - 192.168.0.0/16

lan_network:
  auxilary: 10.14.67.0/24
  guest: 10.14.141.0/24
  iot: 10.14.33.0/24
  kubernetes: 10.14.24.0/24
  management: 10.0.0.0/24
  misc: 10.14.144.0/24
  work: 10.14.14.0/24
  xg16: 10.14.49.0/24

refresh_vpn_connections: no               # Whether or not to remove all the previous GNOME OpenVPN connections before adding the new ones

cockpit_ip_addresses:
  - host: NUC
    ip: 10.14.24.14

portainer_ip_addresses:
  - 10.14.24.14

projects_dir: "/home/{{ ansible_user }}/Projects"

security_ssh_port: "2214"
security_sudoers_passworded:
  - hawkwood
security_autoupdate_mail_to: "brian@megabyte.space"

swap_space: 2G

tor_apt_get: no # Figure out how to make this work
