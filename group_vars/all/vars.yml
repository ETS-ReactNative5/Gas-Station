authorized_key_file: id_rsa_local.pub     # Since this is defined here, this .pub file is added to the authorized_keys SSH configuration by default on all machines

base_domain: megabyte.space               # This is the domain that will be used for all services (e.g. if you access sonarr.home/, you will be redirected to https://sonarr.home.megabyte.space)
home_subdomain: home                      # This is the subdomain used for services that are intended to be used by other people on your intranet
lab_subdomain: lab                        # This is the subdomain used for services that are intended to be used by you (the tech guru)

cloud_server: no

docker_users:
  - "{{ ansible_user }}"

dotfiles_repo: https://gitlab.com/ProfessorManhattan/dotfiles.git # This is the repository that contains dotfiles that are deployed to your desktop workstations (i.e. Ubuntu Desktop or Windows 10)

apt_cacher_endpoint: apt.lab.megabyte.space
apt_cacher_ip_address: 10.14.24.24
lab_ip_address: 10.14.24.14
home_ip_address: 10.14.14.14
status_ip_address: 104.131.71.194
controller_ip_address: 10.14.49.14
healthcheck_endpoint: health.megabyte.space

cockpit_instances:
  - name: Raspi
    ip_address: "{{ controller_ip_address }}"
    user: ubuntu
  - name: RaspiTor
    ip_address: "{{ apt_cacher_ip_address }}"
    user: ubuntu
  - name: StatusCheck
    ip_address: "{{ status_ip_address }}"
  - name: Workstation
    ip_address: "{{ home_ip_address }}"

etc_hosts:
  apt:
    hosts: "aptcacher apt.{{ lab_subdomain }} apt.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 3142
    regexp: "# AptCacherNG"
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ apt_cacher_ip_address }}"
    transport: https
    external: true
  authelia:
    authelia: false
    fqdn_override: "auth.{{ base_domain }}"
    hosts: "auth authelia auth.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26690
    regexp: "# Authelia"
    subdomain: "auth"
    ip_address: "{{ lab_ip_address }}"
    default_server: true
  awx:
    hosts: "awx awx.{{ lab_subdomain }} awx.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    regexp: "# AWX"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.14.69
    external: true
  bazarr:
    hosts: "bazarr bazarr.{{ home_subdomain }} bazarr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26671
    regexp: "# Bazarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  cockpit:
    hosts: "cockpit cockpit.{{ lab_subdomain }} cockpit.{{ lab_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 9090
    proxy_https: yes
    letsencrypt_domain: megabyte.space
    regexp: "# Cockpit"
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ lab_ip_address }}"
    transport: 'https'
    proxy_file: 'proxy-ws.conf'
  cups:
    hosts: "cups cups.{{ home_subdomain }} printers printers.{{ home_subdomain }} printers.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 631
    regexp: "# CUPS"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    transport: 'https'
    external: true
  elastic:
    authelia: false
    hosts: "elastic elastic.{{ lab_subdomain }} elastic.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 27141
    regexp: "# ElasticSearch"
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ lab_ip_address }}"
    transport: 'https'
  healthchecks:
    dns_record: "health"
    dns_zone: "{{ base_domain }}"
    external: true
    fqdn_override: "health.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26798
    hosts: "healthchecks health.{{ lab_subdomain }} health.{{ base_domain }}"
    regexp: "# Healthchecks"
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ status_ip_address }}"
  heimdall:
    fqdn_override: "my.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26672
    hosts: "heimdall heimdall.{{ home_subdomain }} my.{{ home_subdomain }} my.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# Heimdall"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    default_server: true
    external: true
  instapy:
    hostname: "InstaPy"
    hosts: "instapy instapy.{{ home_subdomain }} instapy.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# InstaPy"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.30.69
    external: true
  jackett:
    hosts: "jackett jackett.{{ home_subdomain }} jackett.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26673
    regexp: "# Jackett"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  kibana:
    authelia: false
    hosts: "kibana kibana.{{ lab_subdomain }} kibana.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 27140
    regexp: "# Kibana"
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ lab_ip_address }}"
    transport: 'https'
  kodi:
    hosts: "kodi kodi.{{ home_subdomain }} kodi.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26674
    regexp: "# Kodi"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  lidarr:
    hosts: "lidarr lidarr.{{ home_subdomain }} lidarr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26676
    regexp: "# Lidarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  maas:
    hosts: "maas maas.{{ lab_subdomain }} maas.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 5240
    regexp: "# MAAS"
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ lab_ip_address }}"
    firewall: yes # Enable NGINX ModSecurity
    transport: 'https'
  musicbrainz:
    hosts: "musicbrainz musicbrainz.{{ home_subdomain }} musicbrainz.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26677
    regexp: "# MusicBrainz"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  netboot:
    hosts: "netboot netboot.{{ home_subdomain }} netboot.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26687
    regexp: "# NetbootXYZ"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ controller_ip_address }}"
    external: true
  netbootassets:
    hosts: "netbootassets netbootassets.{{ home_subdomain }} netbootassets.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26688
    regexp: "# Assets4XYZ"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ controller_ip_address }}"
    external: true
  nuc:
    hosts: "nuc nuc.{{ lab_subdomain }} nuc.{{ lab_subdomain }}.{{ base_domain }}"
    hostname: "NUC"
    regexp: "# NUC"
    ip_address: "{{ lab_ip_address }}"
  nzbget:
    hosts: "nzbget nzbget.{{ home_subdomain }} nzbget.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26678
    regexp: "# NZBGet"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  ombi:
    hosts: "ombi ombi.{{ home_subdomain }} ombi.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26679
    regexp: "# Ombi"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  organizr:
    hosts: "organizr organizr.{{ home_subdomain }} organizr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26680
    regexp: "# Organizr"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  pfsense:
    hosts: "pfsense pfsense.{{ lab_subdomain }} pfsense.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# pfSense"
    ip_address: 10.0.0.1
  pihole:
    hostname: "PiHole"
    hosts: "pihole pi.hole dns.{{ home_subdomain }} pihole.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# PiHole"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.35.24
    transport: 'https'
    external: true
  plex:
    hosts: "plex plex.{{ home_subdomain }} plex.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    ip_address: "{{ home_ip_address }}"
    proxy_pass_port: 32400
    regexp: "# Plex"
    subdomain: "{{ home_subdomain }}"
    transport: 'https'
    external: true
  portainer:
    hosts: "portainer portainer.{{ lab_subdomain }} portainer.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26685
    regexp: "# Portainer"
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ lab_ip_address }}"
  radarr:
    hosts: "radarr radarr.{{ home_subdomain }} radarr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26681
    regexp: "# Radarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  raspi:
    hostname: "Raspi"
    hosts: "raspi raspi.{{ lab_subdomain }} raspi.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# RaspiHelper"
    ip_address: "{{ controller_ip_address }}"
  raspitor:
    hostname: "RaspiTor"
    hosts: "raspitor raspitor.{{ lab_subdomain }} raspitor.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# RaspiTor"
    ip_address: "{{ apt_cacher_ip_address }}"
  seconion:
    hosts: "seconion seconion.{{ lab_subdomain }} seconion.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# Security Onion"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 10.14.44.14
  sonarr:
    hosts: "sonarr sonarr.{{ home_subdomain }} sonarr.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26682
    regexp: "# Sonarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  statping:
    authelia: false
    dns_record: "status"
    dns_zone: "{{ base_domain }}"
    external: true
    hosts: "statping statping.{{ lab_subdomain }} status.{{ base_domain }}"
    fqdn_override: "status.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26799
    regexp: "# StatPing"
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ status_ip_address }}"
  statuscheck:
    dns_record: "statuscheck"
    dns_zone: "{{ base_domain }}"
    hosts: "statuscheck statuscheck.{{ lab_subdomain }} statuscheck.{{ base_domain }}"
    hostname: StatusCheck
    regexp: "# StatusCheck"
    ip_address: "{{ status_ip_address }}"
  tautulli:
    hosts: "tautulli tautulli.{{ home_subdomain }} tautulli.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26683
    regexp: "# Tautulli"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  transmission:
    hosts: "transmission transmission.{{ home_subdomain }} transmission.{{ home_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26684
    regexp: "# Transmission"
    subdomain: "{{ home_subdomain }}"
    ip_address: "{{ home_ip_address }}"
    external: true
  unifihome:
    fqdn_override: "unifi.{{ home_subdomain }}.{{ base_domain }}"
    hosts: "unifihome unifi.{{ home_subdomain }} unifi.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# UniFi Home"
    proxy_pass_port: 443
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.1.1
    transport: 'https'
    letsencrypt_domain: megabyte.space
    external: true
  unifilab:
    fqdn_override: "unifi.{{ lab_subdomain }}.{{ base_domain }}"
    hosts: "unifilab unifi.{{ lab_subdomain }} unifi.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# UniFi Lab"
    proxy_pass_port: 8443
    subdomain: "{{ lab_subdomain }}"
    ip_address: "{{ controller_ip_address }}"
    transport: 'https'
    letsencrypt_domain: megabyte.space
    external: true
  workstation:
    hostname: "Workstation"
    hosts: "workstation workstation.{{ lab_subdomain }} workstation.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# Workstation"
    ip_address: "{{ home_ip_address }}"

etc_hosts_list:
  - apt
  - authelia
  - awx
  - bazarr
  - cockpit
  - cups
  - elastic
  - healthchecks
  - heimdall
  - instapy
  - jackett
  - kibana
  - kodi
  - lidarr
  - nzbget
  - maas
  - musicbrainz
  - netboot
  - netbootassets
  - nuc
  - ombi
  - organizr
  - pfsense
  - pihole
  - plex
  - portainer
  - radarr
  - raspi
  - raspitor
  - seconion
  - sonarr
  - statping
  - statuscheck
  - tautulli
  - transmission
  - unifihome
  - unifilab
  - workstation

grub_gfxmode: 1920x1080x24
grub_theme: Vimix-1080p
grub_timeout: 5

install_docker: yes

kibana_url: https://kibana.lab.megabyte.space:443

netdata_rooms:
  do: 0f7a2d28-77c0-4eb1-970b-22405a3886f7
  general: fb8e46ae-4354-454a-b676-46cda89c2e9b
  james: 495e99ef-60b4-43a4-bb60-4e05accf58a2

netdata_room: "{{ netdata_rooms.general }}"

nodejs_version: "12.x"

playbooks_source_repository: git@gitlab.com:ProfessorManhattan/Playbooks.git # This will update the source git repository to use SSH, if cloned from HTTPS

rc1918_networks:
  - 10.0.0.0/8
  - 172.16.0.0/12
  - 192.168.0.0/16

lan_network:
  auxilary: 10.14.67.0/24
  guest: 10.14.141.0/24
  iot: 10.14.33.0/24
  kubernetes: 10.14.24.0/24
  management: 10.0.0.0/24
  misc: 10.14.144.0/24
  work: 10.14.14.0/24
  xg16: 10.14.49.0/24

refresh_vpn_connections: no               # Whether or not to remove all the previous GNOME OpenVPN connections before adding the new ones

portainer_ip_addresses:
  - "{{ lab_ip_address }}"

projects_dir: "/home/{{ ansible_user }}/Projects"

security_ssh_port: "2214"
security_sudoers_passworded:
  - hawkwood
security_autoupdate_mail_to: "brian@megabyte.space"

swap_space: 2G

tor_apt_get: no # Figure out how to make this work
