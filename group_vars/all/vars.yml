authorized_key_file: id_rsa_local.pub     # Since this is defined here, this .pub file is added to the authorized_keys SSH configuration by default on all machines

base_domain: megabyte.space               # This is the domain that will be used for all services (e.g. if you access sonarr.home/, you will be redirected to https://sonarr.home.megabyte.space)
home_subdomain: home                      # This is the subdomain used for services that are intended to be used by other people on your intranet
lab_subdomain: lab                        # This is the subdomain used for services that are intended to be used by you (the tech guru)

docker_compose_binary: /snap/bin/docker-compose

dotfiles_repo: https://gitlab.com/ProfessorManhattan/dotfiles.git # This is the repository that contains dotfiles that are deployed to your desktop workstations (i.e. Ubuntu Desktop or Windows 10)

etc_hosts:
  authelia:
    fqdn_override: "auth.{{ base_domain }}"
    hosts: "auth authelia auth.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26690
    regexp: "# Authelia"
    subdomain: "auth"
    ip_address: 192.168.81.14
  awx:
    hosts: "awx awx.{{ lab_subdomain }} awx.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    regexp: "# AWX"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 192.168.69.69
  bazarr:
    hosts: "bazarr bazarr.{{ home_subdomain }} bazarr.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26671
    regexp: "# Bazarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  graylog:
    hosts: "graylog graylog.{{ lab_subdomain }} graylog.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 9000
    regexp: "# Graylog"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 192.168.81.14
  heimdall:
    fqdn_override: "my.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26672
    hosts: "heimdall heimdall.{{ home_subdomain }} my.{{ home_subdomain }} my.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# Heimdall"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  instapy:
    hosts: "instapy instapy.{{ home_subdomain }} instapy.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# InstaPy"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.30.69
  jackett:
    hosts: "jackett jackett.{{ home_subdomain }} jackett.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26673
    regexp: "# Jackett"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  kodi:
    hosts: "kodi kodi.{{ home_subdomain }} kodi.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26674
    regexp: "# Kodi"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  lidarr:
    hosts: "lidarr lidarr.{{ home_subdomain }} lidarr.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26676
    regexp: "# Lidarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  maas:
    hosts: "maas maas.{{ lab_subdomain }} maas.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 5240
    regexp: "# MAAS"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 192.168.81.14
    waf: yes # Enable NGINX ModSecurity
  musicbrainz:
    hosts: "musicbrainz musicbrainz.{{ home_subdomain }} musicbrainz.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26677
    regexp: "# MusicBrainz"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  nuc:
    hosts: "nuc"
    regexp: "# NUC"
    ip_address: 192.168.81.14
  nzbget:
    hosts: "nzbget nzbget.{{ home_subdomain }} nzbget.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26678
    regexp: "# NZBGet"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  ombi:
    hosts: "ombi ombi.{{ home_subdomain }} ombi.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26679
    regexp: "# Ombi"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  organizr:
    hosts: "organizr organizr.{{ home_subdomain }} organizr.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26680
    regexp: "# Organizr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  pfsense:
    hosts: "pfsense pfsense.{{ lab_subdomain }}"
    regexp: "# pfSense"
    ip_address: 10.0.0.1
  pihole:
    hosts: "pihole pi.hole dns.{{ home_subdomain }} pihole.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# PiHole"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.35.24
  portainer:
    hosts: "portainer portainer.{{ lab_subdomain }} portainer.{{ lab_subdomain }}.{{ base_domain }}"
    letsencrypt_domain: megabyte.space
    proxy_pass_port: 26685 # TODO: Figure out if trailing / is necessary
    regexp: "# Portainer"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 192.168.81.14
  radarr:
    hosts: "radarr radarr.{{ home_subdomain }} radarr.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26681
    regexp: "# Radarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  seconion:
    hosts: "seconion seconion.{{ lab_subdomain }} seconion.{{ lab_subdomain }}.{{ base_domain }}"
    regexp: "# Security Onion"
    subdomain: "{{ lab_subdomain }}"
    ip_address: 192.168.35.14
  sonarr:
    hosts: "sonarr sonarr.{{ home_subdomain }} sonarr.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26682
    regexp: "# Sonarr"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  tautulli:
    hosts: "tautulli tautulli.{{ home_subdomain }} tautulli.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26683
    regexp: "# Tautulli"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  transmission:
    hosts: "transmission transmission.{{ home_subdomain }} transmission.{{ home_subdomain }}.{{ base_domain }}"
    proxy_pass_port: 26684
    regexp: "# Transmission"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.69.14
  unifi:
    hosts: "unifi unifi.{{ home_subdomain }} unifi.{{ home_subdomain }}.{{ base_domain }}"
    regexp: "# UniFi"
    subdomain: "{{ home_subdomain }}"
    ip_address: 192.168.1.1
  workstation:
    hosts: "workstation"
    regexp: "# Workstation"
    ip_address: 192.168.69.14

etc_hosts_list:
  - authelia
  - awx
  - bazarr
  - graylog
  - heimdall
  - instapy
  - jackett
  - kodi
  - lidarr
  - nzbget
  - maas
  - musicbrainz
  - nuc
  - ombi
  - organizr
  - pfsense
  - pihole
  - portainer
  - radarr
  - seconion
  - sonarr
  - tautulli
  - transmission
  - unifi
  - workstation

graylog_host: graylog.lab.megabyte.space
graylog_rsyslog_tcp_port: 1514

netdata_rooms:
  general: fb8e46ae-4354-454a-b676-46cda89c2e9b
  james: 495e99ef-60b4-43a4-bb60-4e05accf58a2

netdata_room: "{{ netdata_rooms.general }}"

nodejs_version: "12.x"

rc1918_networks:
  - 10.0.0.0/8
  - 172.16.0.0/12
  - 192.168.0.0/16

refresh_vpn_connections: no               # Whether or not to remove all the previous GNOME OpenVPN connections before adding the new ones

portainer_ip_addresses:
  - 192.168.81.14

projects_dir: "/home/{{ ansible_user }}/Projects"

security_ssh_port: "2214"
security_sudoers_passworded:
  - hawkwood
security_autoupdate_mail_to: "brian@megabyte.space"

swap_space: 2G